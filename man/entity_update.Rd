% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entity_update.R
\name{entity_update}
\alias{entity_update}
\title{Update one Entity.}
\usage{
entity_update(
  pid = get_default_pid(),
  did = "",
  eid = "",
  label = "",
  data = list(),
  base_version = NULL,
  force = is.null(base_version),
  resolve = FALSE,
  url = get_default_url(),
  un = get_default_un(),
  pw = get_default_pw(),
  retries = get_retries(),
  odkc_version = get_default_odkc_version(),
  orders = c("YmdHMS", "YmdHMSz", "Ymd HMS", "Ymd HMSz", "Ymd", "ymd"),
  tz = get_default_tz()
)
}
\arguments{
\item{pid}{The numeric ID of the project, e.g.: 2.

Default: \code{\link{get_default_pid}}.

Set default \code{pid} through \code{ru_setup(pid="...")}.

See \code{vignette("Setup", package = "ruODK")}.}

\item{did}{(chr) The name of the Entity List, internally called Dataset.
The function will error if this parameter is not given.
Default: "".}

\item{eid}{(chr) The UUID of an Entity, which can be retrieved by
\code{entity_list()}.
The function will error if this parameter is not given.
Default: "".}

\item{label}{(character) The Entity label which must be a non-empty string.
Default: \code{""}.}

\item{data}{(list) A named list of Entity properties to update. See details.
Default: \code{list()}.}

\item{base_version}{If given, must be the current version of the Entity on
the server. Optional.}

\item{force}{(lgl) Whether to force an update. Defaults to be \code{FALSE} if a
\code{base_version} is specified, else defaults to \code{TRUE}.
Using \code{force=TRUE} and specifying a \code{base_version} will emit a warning.}

\item{resolve}{(lgl)}

\item{url}{The ODK Central base URL without trailing slash.

Default: \code{\link{get_default_url}}.

Set default \code{url} through \code{ru_setup(url="...")}.

See \code{vignette("Setup", package = "ruODK")}.}

\item{un}{The ODK Central username (an email address).
Default: \code{\link{get_default_un}}.
Set default \code{un} through \code{ru_setup(un="...")}.
See \code{vignette("Setup", package = "ruODK")}.}

\item{pw}{The ODK Central password.
Default: \code{\link{get_default_pw}}.
Set default \code{pw} through \code{ru_setup(pw="...")}.
See \code{vignette("Setup", package = "ruODK")}.}

\item{retries}{The number of attempts to retrieve a web resource.

This parameter is given to \code{\link[httr]{RETRY}(times = retries)}.

Default: 3.}

\item{odkc_version}{The ODK Central version as a semantic version string
(year.minor.patch), e.g. "2023.5.1". The version is shown on ODK Central's
version page \verb{/version.txt}. Discard the "v".
\code{ruODK} uses this parameter to adjust for breaking changes in ODK Central.

Default: \code{\link{get_default_odkc_version}} or "2023.5.1" if unset.

Set default \code{get_default_odkc_version} through
\code{ru_setup(odkc_version="2023.5.1")}.

See \code{vignette("Setup", package = "ruODK")}.}

\item{orders}{(vector of character) Orders of datetime elements for
lubridate.

Default:
\code{c("YmdHMS", "YmdHMSz", "Ymd HMS", "Ymd HMSz", "Ymd", "ymd")}.}

\item{tz}{A timezone to convert dates and times to.

Read \code{vignette("setup", package = "ruODK")} to learn how \code{ruODK}'s
timezone can be set globally or per function.}
}
\value{
A nested list identical to the return value of \code{entity_detail}.
See \url{https://docs.getodk.org/central-api-entity-management/#updating-an-entity}
for the full schema.
Top level list elements are renamed from ODK's \code{camelCase} to \code{snake_case}.
Nested list elements have the original \code{camelCase}.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\details{
This endpoint is used to update the label or the properties (passed as JSON
in the request body) of an Entity.
You only need to include the properties you wish to update.
To unset the value of any property, you can set it to empty string ("").
The label must be a non-empty string.
Setting a property to null will throw an error.
Attempting to update a property that doesn't exist in the Dataset will throw
an error.
\subsection{Specifying a base version}{

You must either provide a \code{base_version} or use \code{force=TRUE} query parameter.
You cannot cause a new Entity conflict via the API, which is why when
specifying \code{base_version}, it must match the current version of the Entity on
the server. This acts as a check to ensure you are not trying to update based
on stale data. If you wish to update the Entity regardless of the current
state, then you can use the force flag.
}

\subsection{Resolving a conflict}{

You can also use this endpoint to resolve an Entity conflict by passing
\code{resolve=true}, in which case providing \code{data} is optional.
When not providing new data, only the conflict status from
the Entity will be cleared and no new version will be created.
When providing data, the conflict will be cleared and an updated version of
the Entity will be added.
}
}
\examples{
\dontrun{
# See vignette("setup") for setup and authentication options
# ruODK::ru_setup(svc = "....svc", un = "me@email.com", pw = "...")

el <- entitylist_list()

# Entity List name (dataset ID, did)
did <- el$name[1]

# All Entities of Entity List
en <- entity_list(did = did)

ed <- entity_detail(did = did, eid = en$uuid[1])

e_label <- ed$current_version$label

# This example updates one field which exists in the example form.
# Your own Entity will have different fields to update.
e_data <- list(
  details = paste0(
    ed$current_version$data$details, ". Updated on ", Sys.time()
  )
)

# Update the Entity (implicitly forced update)
eu <- entity_update(
  did = did,
  eid = en$uuid[1],
  label = e_label,
  data = e_data
)
eu
}
}
\seealso{
\url{https://docs.getodk.org/central-api-entity-management/#updating-an-entity}

Other entity-management: 
\code{\link{entity_create}()},
\code{\link{entity_delete}()},
\code{\link{entity_detail}()},
\code{\link{entity_list}()},
\code{\link{entitylist_detail}()},
\code{\link{entitylist_download}()},
\code{\link{entitylist_list}()},
\code{\link{entitylist_update}()}
}
\concept{entity-management}
